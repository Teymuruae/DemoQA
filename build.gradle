plugins {
    id 'java'
    id("io.qameta.allure") version "2.11.2"

}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}


dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.3',
            'io.qameta.allure:allure-selenide:2.17.3',
            'com.codeborne:selenide:6.13.0',
            'io.github.bonigarcia:webdrivermanager:5.2.3',
            'org.aspectj:aspectjweaver:1.9.5',
            'io.qameta.allure:allure-junit5:2.13.10',
            'io.qameta.allure:allure-commandline:2.13.10',
            'io.qameta.allure:allure-assertj:2.13.10',
            'io.qameta.allure:allure-java-commons:2.13.10',
            'io.qameta.allure:allure-rest-assured:2.13.10',
            'io.rest-assured:rest-assured:5.3.0',
            'com.github.javafaker:javafaker:1.0.2'

    )
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }

}


test {
    useJUnitPlatform()
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}

task testov(type: Test) {
    useJUnitPlatform {
        includeTags("testov")
    }
}